# -*- coding: utf-8 -*-
"""Task3_Codsoft.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1JL481WMD8w9gXHUjItWt7-GM8k6qqKQa
"""

import numpy as np
import pandas as pd
import pickle
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.ensemble import RandomForestClassifier
from sklearn.pipeline import Pipeline
from sklearn.metrics import classification_report

pd.set_option('display.max_columns', None)

df = pd.read_csv('/content/creditcard.csv')

df.head()

df.shape
df.dtypes

df.isnull().sum()

fraud_count = df["Class"].value_counts()
fruad_rate = 100*fraud_count/df.shape[0]

fruad_data = pd.concat([fraud_count,fruad_rate],axis =1).reset_index()

fruad_data.columns =  ['Class','Count','Percentage' ]
fruad_data

df_fraud = df[df['Class']==1]
df_not_fraud = df[df['Class']==0]
df_not_fraud_sampled = df_not_fraud.sample(df_fraud.shape[0], replace = False , random_state = 101)
df_balanced = pd.concat([df_not_fraud_sampled,df_fraud],axis = 0).sample(frac=1, replace = False, random_state= 101).reset_index().drop('index',axis=1)
df_balanced

fruad_count = df_balanced["Class"].value_counts()
fruad_rate = 100*fruad_count/df_balanced.shape[0]
fruad_data = pd.concat([fruad_count,  fruad_rate], axis = 1).reset_index()
fruad_data.columns = ['Class','Count',"Percentage"]
fruad_data

X_train, X_test,  y_train, y_test = train_test_split(df_balanced.drop('Class', axis=1),df_balanced['Class'],test_size = 0.2,random_state=101)

print(f'''Xtrain:{X_train.shape}
x_test:{X_test.shape}
y_train:{y_train.shape}
y_test:{y_test.shape}''')

randomForestModel = Pipeline([
    ('scaler', StandardScaler()),
    ('classifier', RandomForestClassifier())
])

randomForestModel.fit(X_train, y_train)

y_pred_logic = randomForestModel.predict(X_test)
y_pred_logic

cr = classification_report(y_test, y_pred_logic)
print(cr)

with open('./model.pkl', 'wb') as fp:
  pickle.dump(randomForestModel, fp)

